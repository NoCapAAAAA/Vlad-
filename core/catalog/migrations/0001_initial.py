# Generated by Django 4.0.5 on 2023-03-31 10:28

import catalog.utils.utils
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0014_remove_group_code'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150, validators=[catalog.utils.utils.validate], verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=150, validators=[catalog.utils.utils.validate], verbose_name='Фамилия')),
                ('last_name', models.CharField(blank=True, max_length=150, validators=[catalog.utils.utils.validate], verbose_name='Отчество')),
                ('phone_number', models.CharField(max_length=127, validators=[catalog.utils.utils.validate_phone_number], verbose_name='Телефон')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=1, verbose_name='Пол')),
                ('role', models.CharField(blank=True, choices=[('JU', 'Пользователь'), ('OM', 'Менеджер по заказу'), ('PM', 'Менеджер по товару'), ('OW', 'Владелец')], max_length=2, verbose_name='Роль')),
                ('photo', models.ImageField(blank=True, default='avatars/user.png', upload_to='avatars/', verbose_name='Фото')),
                ('birthdate', models.DateField(blank=True, default=datetime.date.today, verbose_name='Дата рождения')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SirviceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicetype', models.CharField(blank=True, default=None, max_length=64, null=True)),
            ],
            options={
                'verbose_name': 'Тип услуги',
            },
        ),
        migrations.CreateModel(
            name='VanLength',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vanlength', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Длина вагона',
            },
        ),
        migrations.CreateModel(
            name='VanType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vantype', models.CharField(blank=True, default=None, max_length=64, null=True)),
            ],
            options={
                'verbose_name': 'Тип вагины',
            },
        ),
        migrations.CreateModel(
            name='TireStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kolvotire', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=64)),
                ('Rtire', models.CharField(blank=True, default='', max_length=255)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('storevalue', models.CharField(blank=True, default='', max_length=255)),
                ('status', models.CharField(blank=True, choices=[('Создан', 'Создан'), ('Отменён', 'Отменён'), ('На хранении', 'На хранении'), ('Завершён', 'Завершён'), ('Передан в работу', 'Передан в работу'), ('Готов к получению', 'Готов к получению')], default='Ожидает подтверждения', max_length=30, verbose_name='Статус')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=64, null=True, validators=[catalog.utils.utils.validate])),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='catalog/', verbose_name='Изображение')),
                ('slug', models.SlugField(unique=True)),
                ('lengthvan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.vanlength', verbose_name='Длина вагины')),
                ('servicetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.sirvicetype', verbose_name='Тип услуги')),
                ('typevan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.vantype', verbose_name='Тип вагины')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='HistoryOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, default=None, max_length=64, null=True, validators=[catalog.utils.utils.validate_phone_number])),
                ('fio', models.CharField(blank=True, max_length=64)),
                ('car_number', models.CharField(blank=True, max_length=64)),
                ('email', models.CharField(blank=True, max_length=64)),
                ('date', models.CharField(blank=True, max_length=64)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('name', models.TextField(blank=True)),
                ('datecreate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('status', models.CharField(blank=True, choices=[('Создан', 'Создан'), ('Отменён', 'Отменён'), ('На хранении', 'На хранении'), ('Завершён', 'Завершён'), ('Передан в работу', 'Передан в работу'), ('Готов к получению', 'Готов к получению')], default='Ожидает подтверждения', max_length=30, verbose_name='Статус')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
        ),
    ]
